package operation;

public class Bit {
    public static void main(String[] args) {
        System.out.println(3<<2);
        /*先将3转化成2进制
        00000000 00000000 00000000 00000011（补码）
      (00)000000 00000000 00000000 0000001100
      12
      结果为3*2^2
         */
        System.out.println(24>>2);//24/2^2=24/4=6
        System.out.println(24>>>2);
//结果为24/2^2(因为24为正，所以>>>和>>结果相等）
        System.out.println(-24>>2);
        System.out.println(-24>>>2);
        System.out.println(0b00111111111111111111111111111010);
        /*
        计算出24的二进制11000
        00000000 00000000 00000000 00011000
        10000000 00000000 00000000 00011000（-24）
        11111111 11111111 11111111 11101000(-24的补码)
        11111111 11111111 11111111 11111010（00）（求出的补码）
        10000000 00000000 00000000 00000110(原码）
        -6
        >>>:
        00000000 00000000 00000000 00011000
        10000000 00000000 00000000 00011000（-24）
        11111111 11111111 11111111 11101000(-24的补码)
        00111111 11111111 11111111 11111010（00）（求出的补码）
        00111111 11111111 11111111 11111010（原码）

         */
        //面试题：用最有效率的方法计算2乘以8
        System.out.println(2<<3);
        /*三目运算符：
        格式：比较表达式？表达式1：表达式2；
         */
        int a=40;
        int b=25;
        //int c=(a=b)?a:b(报错，不是=不是比较表达式)
        int c=(a==b)?a:b;
        System.out.println(c);
        /*
        练习：
        获取两个整数中的最大值
        获取三个整数中的最大值
        比较两个整数是否相同
         */
        int x=100;
        int y=200;
        int z=300;
        //获取两个整数中的最大值
        int max=y>x?y:x;
        System.out.println("max:"+max);
        //获取三个整数中的最大值
        int temple=(x>y)?x:y;
        int max1=(temple>z)?temple:z;
        System.out.println(max1);
        //一步搞定(不推荐）
        int max2=(z>(x>y?x:y)?z:(x>y?x:y));
        System.out.println(max2);
        //比较两个整数是否相同
          int m=100;
          int n=200;
          boolean flag=(m==n)?true:false;
        System.out.println(flag);
    }

}
